[
    {
        "name": "Get references for image",
        "description": "Find all page that refer to a given image/asset in a jcr path.",
        "command": "-X GET ${server}/bin/querybuilder.json?path=${site|/content/mySite}&1_property=fileReference&1_property.value=${image|/content/dam/myImage}&p.limit=${limit|-1}",
        "type":"json"
    },
    {
        "name": "Find all pending Jobs",
        "description": "",
        "command": "${server}/bin/querybuilder.json?&path=/var/eventing/jobs&type=slingevent:Job&p.limit=-1&fulltext=/com/day/cq/replication/job&fulltext.relPath=@slingevent:topic&property.and=true&property=slingevent:finished&property.operation=not&orderby=slingevent:created&orderby.sort=asc",
        "type":"json"
    },
    {
        "name": "Find all Blocking Jobs",
        "description": "",
        "command": "${server}/bin/querybuilder.json?path=/var/eventing/jobs/anon&type=slingevent:Job&rangeproperty.property=event.job.retrycount&rangeproperty.lowerBound=1",
        "type":"json"
    },
    {
        "name": "Uninstall a bundle",
        "description": "",
        "command": "-daction=uninstall ${server}/system/console/bundles/\"${bundle}\"",
        "type":"json"
    },
    {
        "name": "Upload a package AND install",
        "description": "",
        "command": "-F file=@${file} -F name=${package name} -F force=${force|true} -F install=true ${server}/crx/packmgr/service.jsp",
        "type":"fork"
    },
    {
        "name": "Upload a package DO NOT install",
        "description": "",
        "command": "-F file=@${file} -F name=${package name} -F force=${force|true} -F install=false ${server}/crx/packmgr/service.jsp",
        "type":"json"
    },
    {
        "name": "Rebuild an existing package",
        "description": "",
        "command": "-F cmd=build ${server}/crx/packmgr/service/.json/etc/packages/${package file}",
        "type":"json"
    },
    {
        "name": "Install a package",
        "description": "",
        "command": "${server}/crx/packmgr/service/.json/etc/packages/export/${package file}?cmd=install",
        "type":"json"
    },
    {
        "name": "Delete a node and its descendents",
        "description": "USE WITH CAUTION!  This recursively deletes content",
        "command": "-X DELETE ${server}/${node path|/content/myNode}",
        "type":"html"
    },
    {
        "name": "Create a node",
        "description": "Create a new node at a specified JCR path",
        "command": "-F _charset_=utf-8 -F :nameHint=node -F jcr:primaryType=${primary type|nt:unstructured} -F sling:resourceType=${resource type|project-A/components/abc-definition} ${server}${jcr path|/content}/${node name|new node}/",
        "type":"html"
    },
    {
        "name": "Lock a page",
        "description": "",
        "command": "-F cmd=lockPage -F path=${page path|/content/path/to/page} -F _charset_=utf-8 ${server}/bin/wcmcommand"
    },
    {
        "name": "Unlock a page",
        "description": "Note: only available to admin or lock owner",
        "command": "-F cmd=unlockPage -F path=${page path|/content/path/to/page} -F _charset_=utf-8 ${server}/bin/wcmcommand"
    },
    {
        "name": "Copy a node",
        "description": "",
        "command": "-F:operation=copy -F:dest=${destination path|/path/to/destination} -F:replace=${replace|true} ${server}${source path|/path/to/source}",
        "type":"html"
    },
    {
        "name": "Move a node",
        "description": "",
        "command": "-F:operation=move -F:dest=${destination path|/path/to/destination} ${server}${source path|/path/to/source}",
        "type":"html"
    },
    {
        "name": "Activate node/page",
        "description":"",
        "command":"-F path=${node path|/content/path/to/page} -F cmd=activate ${server}/bin/replicate.json",
        "type":"html"
    },
    {
        "name": "Deactivate node/page",
        "description":"",
        "command":"-F path=${node path|/content/path/to/page} -F cmd=deactivate ${server}/bin/replicate.json",
        "type":"html"
    },    
    {
        "name": "Activate tree",
        "description": "Warning: This is a recursive operation and performing this on large secions of the respository should only be done with caution!",
        "command": "-F cmd=activate -F ignoredeactivated=${ignore activated|true} -F onlymodified=${only modified|true} -F path=${node path} ${server}/etc/replication/treeactivation.json",
        "type":"json"
    },
    {
        "name": "Deactivate tree",
        "description": "Warning: This is a recursive operation and performing this on large secions of the respository should only be done with caution!",
        "command": "-F cmd=deactivate -F onlymodified=${only modified|true} -F path=${node path} ${server}/etc/replication/treeactivation.json",
        "type":"json"
    },
    {
        "name": "Create user",
        "description": "",
        "command": "-FcreateUser=${user full name} -FauthorizableId=${user name} -Frep:password=${password|changeme} ${server}/libs/granite/security/post/authorizables"
    },
    {
        "name": "Create user in group",
        "description": "You can add multiple membership parameters for more than one group",
        "command": "-FcreateUser=${user full name} -FauthorizableId=testuser -Frep:password=${password|changeme} -Fmembership=${group|contributor} ${server}/libs/granite/security/post/authorizables"
    },
    {
        "name": "Create group",
        "description": "",
        "command": "-FcreateGroup=${group display name} -FauthorizableId=${group name} ${server}/libs/granite/security/post/authorizables"
    },
    {
        "name": "Add user to a group",
        "description": "",
        "command": "-FaddMembers=${user name} ${server}/home/groups${group path|/t/testGroup}.rw.html"
    },
    {
        "name": "Remove user from a group",
        "description": "",
        "command": "-FremoveMembers=${user name} ${server}/home/groups${group path|/t/testGroup}.rw.html"
    },
    {
        "name": "Set user's groups memberships",
        "description": "This removes a user from any groups they might be in that are not part of the provided groups.",
        "command": "-Fmembership=${group 1|contributor} -Fmembership=${group 2|othergroup} ${server}/home/users/${user path|/u/user}.rw.html"
    }
]